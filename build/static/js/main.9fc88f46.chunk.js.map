{"version":3,"sources":["Views/Login.jsx","Components/ItensPedido.jsx","Components/ListaPedidos.jsx","Views/Pedidos.jsx","images/404.png","Views/Page404.jsx","App.jsx","index.js"],"names":["Login","navigate","useNavigate","validations","yup","shape","email","required","senha","min","className","onSubmit","values","toast","loading","config","method","url","headers","data","JSON","stringify","axios","then","response","localStorage","setItem","resposta","token","dismiss","success","autoClose","catch","error","warning","validationSchema","initialValues","name","component","type","position","draggable","ItensPedido","itensPedido","handleItemDeletion","map","item","quantidade","slice","nome","rentabilidade","Badge","bg","onClick","id","ListaPedidos","listaPedidos","documento","numeroPedidoCliente","Pedidos","isLogged","getItem","useState","orderIsOpen","setIsOrderIsOpen","isVisible","setIsVisible","setItensPedidos","setListOrders","listItens","idPedido","Authorization","codigoMensagem","mensagem","listOrders","textoPesquisa","pedidos","useEffect","validationsPedido","idCliente","setValuesOrders","value","valuesItem","precoUnitario","replace","idProduto","String","itemID","to","Page404","src","img404","alt","style","color","App","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fc88f46.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const handleSubmit = (values) => {\r\n    toast.loading(\"Aguarde... Validando dados do usuário\");\r\n    var data = JSON.stringify({\r\n      email: values.email,\r\n      senha: values.senha,\r\n    });\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"https://projeto-pedidos-api.jelastic.saveincloud.net/usuarios/autenticaUsuario\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        localStorage.setItem(\"app-token\", response.data.resposta.token);\r\n        localStorage.setItem(\"app-email\", response.data.resposta.email);\r\n        localStorage.setItem(\"app-senha\", response.data.resposta.senha);\r\n        toast.dismiss();\r\n        toast.success(\"Usuário autenticado com sucesso\", { autoClose: false });\r\n        navigate(\"/pedidos\");\r\n      })\r\n      .catch(function (error) {\r\n        toast.dismiss();\r\n        toast.warning(\"Usuário não encontrado para os dados informados\", {\r\n          autoClose: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  const validations = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email(\"Este não é um formato válido de email\")\r\n      .required(\"O campo email é de preenchimento obrigatório\"),\r\n    senha: yup\r\n      .string()\r\n      .min(8, \"Mínimo de 8 caracteres para o campo senha\")\r\n      .required(\"O campo senha é de preenchimento obrigatório\"),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login\">\r\n        <h2>Autenticação</h2>\r\n        <p>Informe seu email e senha para autenticação</p>\r\n        <Formik\r\n          onSubmit={handleSubmit}\r\n          validationSchema={validations}\r\n          initialValues={{\r\n            email: \"\",\r\n            senha: \"\",\r\n          }}\r\n        >\r\n          <Form className=\"Login\">\r\n            <div className=\"Login-Group\">\r\n              <Field name=\"email\" className=\"Login-Field\" />\r\n              <ErrorMessage\r\n                component=\"span\"\r\n                name=\"email\"\r\n                className=\"Login-Error\"\r\n              />\r\n            </div>\r\n            <div className=\"Login-Group\">\r\n              <Field type=\"password\" name=\"senha\" className=\"Login-Field\" />\r\n              <ErrorMessage\r\n                component=\"span\"\r\n                name=\"senha\"\r\n                className=\"Login-Error\"\r\n              />\r\n            </div>\r\n            <button className=\"Login-Btn\" type=\"submit\">\r\n              Validar meus dados\r\n            </button>\r\n          </Form>\r\n        </Formik>\r\n        <ToastContainer position=\"top-center\" draggable=\"true\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./ItensPedido.css\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst ItensPedido = ({ itensPedido, handleItemDeletion }) => {\r\n  return (\r\n    <>\r\n      {itensPedido.map((item) => (\r\n        <>\r\n          <div className=\"Itens-container\" key={item.id}>\r\n            <div className=\"Itens-title\">\r\n              ( {(\"000000\" + item.quantidade).slice(-6)} Und ) - {item.nome}\r\n            </div>\r\n\r\n            <div className=\"buttons-container\">\r\n              {item.rentabilidade === 1 ? (\r\n                <Badge className=\"Badge\" bg=\"success\">\r\n                  Rentabilidade ótima\r\n                </Badge>\r\n              ) : item.rentabilidade === 2 ? (\r\n                <Badge className=\"Badge\" bg=\"warning\">\r\n                  Rentabilidade boa\r\n                </Badge>\r\n              ) : (\r\n                <Badge className=\"Badge\" bg=\"danger\">\r\n                  Rentabilidade ruim\r\n                </Badge>\r\n              )}\r\n              <button\r\n                className=\"Item-button\"\r\n                onClick={() => handleItemDeletion(item.id)}\r\n              >\r\n                <FaRegTrashAlt />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItensPedido;\r\n","import React from \"react\";\r\nimport './ListaPedidos.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst ListaPedidos = ({ listaPedidos }) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"Lista-pedidos\">\r\n\t\t\t{listaPedidos.map((item) => (\r\n\t\t\t\t<>\r\n                    <div className=\"Itens-container\" key={item.id}>\r\n\t\t\t\t\t\t<div className=\"Itens-title\">\r\n\t\t\t\t\t\t\t{item.documento} - {item.nome}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"buttons-container\">\r\n\t\t\t\t\t\t\t{(\"0000000000\" + item.numeroPedidoCliente ).slice(-10) } ( { item.quantidade } Und )\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n                </>\r\n\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ListaPedidos;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { FaSignOutAlt, FaRegStickyNote, FaPlus } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ItensPedido from \"../Components/ItensPedido\";\r\nimport ListaPedidos from \"../Components/ListaPedidos\";\r\n\r\nimport \"./Pedidos.css\";\r\nimport \"../Components/Button.css\";\r\n\r\nconst Pedidos = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const isLogged = !!localStorage.getItem(\"app-token\");\r\n\r\n  //Logout\r\n  const handleLogOut = () => {\r\n    localStorage.setItem(\"app-token\", \"\");\r\n    localStorage.setItem(\"app-email\", \"\");\r\n    localStorage.setItem(\"app-senha\", \"\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const [orderIsOpen, setIsOrderIsOpen] = useState(false);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const handleNewOrder = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  const [itensPedido, setItensPedidos] = useState([]);\r\n  const [listaPedidos, setListOrders] = useState([]);\r\n\r\n  //Finish\r\n  const handleFinishOrder = () => {\r\n    localStorage.setItem(\"idPedido\", \"\");\r\n    setIsVisible(!isVisible);\r\n    setIsOrderIsOpen(false);\r\n    listOrders();\r\n  };\r\n\r\n  //Deletion\r\n  const handleItemDeletion = (itemID) => {\r\n    toast.dismiss();\r\n    toast.loading(\"Aguarde... Validando dados do item\");\r\n\r\n    var data = JSON.stringify({\r\n      id: String(itemID),\r\n    });\r\n\r\n    var config = {\r\n      method: \"delete\",\r\n      url: \"https://projeto-pedidos-api.jelastic.saveincloud.net/itensPedido\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"app-token\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        toast.dismiss();\r\n\r\n        if (response.data.resposta.codigoMensagem === \"001\") listItens();\r\n        else\r\n          toast.warning(response.data.resposta.mensagem, { autoClose: false });\r\n      })\r\n      .catch(function (error) {\r\n        toast.dismiss();\r\n        toast.warning(\r\n          \"Erro não esperado ao excluir o item do pedido, consulte o suporte\",\r\n          { autoClose: false }\r\n        );\r\n      });\r\n  };\r\n\r\n  //List items\r\n  const listItens = () => {\r\n    toast.dismiss();\r\n    toast.loading(\"Aguarde... Listando itens do pedido\");\r\n\r\n    var data = JSON.stringify({\r\n      idPedido: localStorage.getItem(\"idPedido\"),\r\n    });\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"https://projeto-pedidos-api.jelastic.saveincloud.net/itensPedido/lista\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"app-token\"),\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        toast.dismiss();\r\n        if (response.data.resposta.codigoMensagem === \"001\")\r\n          setItensPedidos(response.data.resposta.itensPedido);\r\n        else\r\n          toast.warning(response.data.resposta.mensagem, { autoClose: false });\r\n      })\r\n      .catch(function (error) {\r\n        toast.dismiss();\r\n        toast.warning(\r\n          \"Houve um erro não esperado ao listar os itens do pedido, favor consulte o suporte\",\r\n          { autoClose: false }\r\n        );\r\n      });\r\n  };\r\n\r\n  //List orders\r\n  const listOrders = () => {\r\n    toast.dismiss();\r\n    toast.loading(\"Aguarde... Listando pedidos\");\r\n\r\n    var data = JSON.stringify({\r\n      textoPesquisa: \"\",\r\n    });\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"https://projeto-pedidos-api.jelastic.saveincloud.net/pedidos/lista\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"app-token\"),\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        toast.dismiss();\r\n        if (response.data.resposta.codigoMensagem === \"001\")\r\n          setListOrders(response.data.resposta.pedidos);\r\n        else\r\n          toast.warning(response.data.resposta.mensagem, { autoClose: false });\r\n      })\r\n      .catch(function (error) {\r\n        toast.dismiss();\r\n        toast.warning(\r\n          \"Houve um erro ao listar os pedidos, favor consulte o suporte\",\r\n          { autoClose: false }\r\n        );\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    listOrders();\r\n  }, []);\r\n\r\n  //Add item in order\r\n  const handleAddItem = (valuesItem) => {\r\n    toast.dismiss();\r\n    toast.loading(\"Aguarde... Validando dados do item\");\r\n\r\n    var precoUnitario = valuesItem.precoUnitario;\r\n    precoUnitario = precoUnitario.replace(\".\", \",\");\r\n    precoUnitario = precoUnitario.replace(\",\", \".\");\r\n\r\n    var data = JSON.stringify({\r\n      idPedido: localStorage.getItem(\"idPedido\"),\r\n      idProduto: String(valuesItem.idProduto),\r\n      quantidade: String(valuesItem.quantidade),\r\n      precoUnitario: String(precoUnitario),\r\n    });\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"https://projeto-pedidos-api.jelastic.saveincloud.net/itensPedido\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"app-token\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        toast.dismiss();\r\n\r\n        if (response.data.resposta.codigoMensagem === \"001\") listItens();\r\n        else\r\n          toast.warning(response.data.resposta.mensagem, { autoClose: false });\r\n      })\r\n      .catch(function (error) {\r\n        toast.dismiss();\r\n        toast.warning(\r\n          \"Houve um erro ao adicionar o item, favor consulte o suporte\",\r\n          { autoClose: false }\r\n        );\r\n      });\r\n  };\r\n\r\n  //Order\r\n  const handleSubmitPedido = (values) => {\r\n    toast.dismiss();\r\n\r\n    toast.loading(\"Aguarde... Validando dados do pedido\");\r\n    var data = JSON.stringify({\r\n      numeroPedidoCliente: values.numeroPedidoCliente,\r\n      idCliente: values.idCliente,\r\n    });\r\n\r\n    var config = {\r\n      method: \"post\",\r\n      url: \"https://projeto-pedidos-api.jelastic.saveincloud.net/pedidos\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"app-token\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: data,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        toast.dismiss();\r\n        localStorage.setItem(\"idPedido\", response.data.resposta.idPedido);\r\n        listItens();\r\n        setIsOrderIsOpen(true);\r\n      })\r\n      .catch(function (error) {\r\n        toast.dismiss();\r\n        toast.warning(\"Houve um erro ao iniciar o pedido\", {\r\n          autoClose: false,\r\n        });\r\n        setIsOrderIsOpen(false);\r\n      });\r\n  };\r\n\r\n  const validationsPedido = yup.object().shape({\r\n    numeroPedidoCliente: yup\r\n      .number(\"Somente números\")\r\n      .required(\r\n        \"O campo de numero do pedido do cliente é de preenchimento obrigatório\"\r\n      ),\r\n    idCliente: yup\r\n      .string()\r\n      .required(\"O campo cliente é de preenchimento obrigatório\"),\r\n  });\r\n\r\n  return isLogged ? (\r\n    <div className=\"Pedidos\">\r\n      <div className=\"Pedidos-cabecalho\">\r\n        <div className=\"Pedidos-titulo\">\r\n          <h2>Pedidos</h2>\r\n        </div>\r\n        <div className=\"Pedidos-opcoes\">\r\n          <button className=\"button\" onClick={handleLogOut}>\r\n            <FaSignOutAlt /> Sair\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {isVisible ? (\r\n        <div className=\"Pedidos-novo\">\r\n          <Formik\r\n            onSubmit={handleSubmitPedido}\r\n            validationSchema={validationsPedido}\r\n            initialValues={{\r\n              idCliente: \"\",\r\n              numeroPedidoCliente: \"\",\r\n            }}\r\n            setValuesOrders\r\n          >\r\n            <Form className=\"Pedido-Form\">\r\n              <div className=\"Pedidos-linhas\">\r\n                <div className=\"Flex1\">\r\n                  <label>* Nº Pedido cliente</label>\r\n                  <Field name=\"numeroPedidoCliente\" className=\"Pedido-Field\" />\r\n                  <ErrorMessage\r\n                    component=\"span\"\r\n                    name=\"numeroPedidoCliente\"\r\n                    className=\"Login-Error\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"Flex4\">\r\n                  <label>* Selecione um cliente</label>\r\n                  <Field\r\n                    className=\"Pedido-Field Select\"\r\n                    component=\"select\"\r\n                    name=\"idCliente\"\r\n                  >\r\n                    <option className=\"options\" value=\"0\"></option>\r\n                    <option className=\"options\" value=\"1\">\r\n                      Darth​ ​Vader\r\n                    </option>\r\n                    <option className=\"options\" value=\"2\">\r\n                      Obi-Wan​ ​Kenobi\r\n                    </option>\r\n                    <option className=\"options\" value=\"3\">\r\n                      Luke​ ​Skywalker\r\n                    </option>\r\n                    <option className=\"options\" value=\"4\">\r\n                      Imperador​ ​Palpatine\r\n                    </option>\r\n                    <option className=\"options\" value=\"5\">\r\n                      Han​ ​Solo\r\n                    </option>\r\n                  </Field>\r\n                </div>\r\n              </div>\r\n\r\n              {orderIsOpen === false ? (\r\n                <div className=\"Pedidos-opcoes\">\r\n                  <button className=\"Pedido-Btn\" type=\"submit\">\r\n                    Adicionar itens\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      ) : (\r\n        <div className=\"Pedidos-opcoes-pedido\">\r\n          <button className=\"button\" onClick={handleNewOrder} type=\"button\">\r\n            <FaRegStickyNote /> Novo Pedido\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {orderIsOpen ? (\r\n        <>\r\n          <Formik\r\n            onSubmit={handleAddItem}\r\n            initialValues={{\r\n              idProduto: 1,\r\n              quantidade: 0,\r\n              precoUnitario: 0,\r\n            }}\r\n          >\r\n            <Form className=\"Pedido-Form\">\r\n              <div className=\"Pedidos-linhas\">\r\n                <div className=\"Flex1\">\r\n                  <hr />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"Pedidos-linhas\">\r\n                <div className=\"Flex1\">\r\n                  <label>* Selecione um produto</label>\r\n                  <Field\r\n                    className=\"Pedido-Field Select\"\r\n                    component=\"select\"\r\n                    name=\"idProduto\"\r\n                  >\r\n                    <option className=\"options\" value=\"0\"></option>\r\n                    <option className=\"options\" value=\"1\">\r\n                      Millenium​ ​Falcon\r\n                    </option>\r\n                    <option className=\"options\" value=\"2\">\r\n                      X-Wing\r\n                    </option>\r\n                    <option className=\"options\" value=\"3\">\r\n                      Super Star Destroyer\r\n                    </option>\r\n                    <option className=\"options\" value=\"4\">\r\n                      TIE Fighter\r\n                    </option>\r\n                    <option className=\"options\" value=\"5\">\r\n                      Lightsaber\r\n                    </option>\r\n                    <option className=\"options\" value=\"6\">\r\n                      DLT-19 Heavy Blaster Rifle\r\n                    </option>\r\n                    <option className=\"options\" value=\"7\">\r\n                      Lightsaber\r\n                    </option>\r\n                  </Field>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"Pedidos-linhas\">\r\n                <div className=\"Flex2 NoLeft\">\r\n                  <label>* Preço</label>\r\n                  <Field name=\"precoUnitario\" className=\"Pedido-Field\" />\r\n                </div>\r\n\r\n                <div className=\"Flex2\">\r\n                  <label>* Quantidade</label>\r\n                  <Field name=\"quantidade\" className=\"Pedido-Field\" />\r\n                </div>\r\n\r\n                <div className=\"Flex4 Pedidos-opcoes\">\r\n                  <button className=\"button Botao-adicionar-item\" type=\"submit\">\r\n                    <FaPlus /> Adicionar item\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </Formik>\r\n\r\n          <div className=\"Pedidos-intens\">\r\n            <ItensPedido\r\n              itensPedido={itensPedido}\r\n              handleItemDeletion={handleItemDeletion}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"Pedidos-opcoes-pedido\">\r\n            <button\r\n              className=\"button Botao-adicionar-item\"\r\n              onClick={handleFinishOrder}\r\n              type=\"button\"\r\n            >\r\n              <FaRegStickyNote /> Finalizar Pedido\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"Pedidos-intens\">\r\n        <ListaPedidos listaPedidos={listaPedidos} />\r\n      </div>\r\n      <ToastContainer position=\"top-center\" draggable=\"true\" />\r\n    </div>\r\n  ) : (\r\n    <Navigate to=\"/\" />\r\n  );\r\n};\r\n\r\nexport default Pedidos;\r\n","export default __webpack_public_path__ + \"static/media/404.3ccf2311.png\";","import React from \"react\"\r\nimport { Link } from 'react-router-dom';\r\nimport img404 from '../images/404.png';\r\nimport './Page404.css'\r\n\r\nconst Page404 = () => {\r\n\r\n    return ( \r\n\r\n        <>\r\n            <div className=\"Page404\">\r\n                <div className=\"image-container\">\r\n                    <img src={img404} alt=\"Página não encontrada\"/>\r\n                </div>\r\n                <h2>A página solicitada não existe ou você não tem permissão de acesso</h2>\r\n                <Link style={{ color: '#FFF' }} to=\"/\">Voltar para o login</Link>\r\n            </div>\r\n        </>\r\n        \r\n     );\r\n}\r\n \r\nexport default Page404;","import React from \"react\"\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\n\nimport './App.css'\nimport Login from \"./Views/Login\";\nimport Pedidos from \"./Views/Pedidos\";\nimport Page404 from \"./Views/Page404\";\n\nconst App = () =>  {\n  return (\n    <main className=\"App\">\n      <Router>\n          <Routes>\n            <Route path=\"/\" exact element={<Login />} />\n            <Route path=\"/pedidos\" exact element={<Pedidos />} />\n            <Route path='*' element={<Page404 />} />\n          </Routes>\n      </Router>\n    </main>\n  );\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}